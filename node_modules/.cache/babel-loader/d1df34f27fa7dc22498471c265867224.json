{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GH4123\\\\my-ui\\\\new-ui\\\\src\\\\Components\\\\Tpage.js\";\nimport React, { Fragment, useState } from 'react';\nimport { GenericStyle } from '../app_styles';\nimport { NavigationBar } from './NavigationBar';\nimport Title from './Title';\nimport BaseInformation from './BaseInformation';\nimport { useParams, Link } from 'react-router-dom';\nimport { getDataFromServer, getColumnsWithFilters } from \"../utils/dataFromServer\";\nimport Sidebar from './Sidebar';\nimport Header from \"./Header\";\nimport { GridLayout } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport add_dynamic_components from '../utils/makeData';\nimport { CssBaseline, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AllPages } from './AllPages';\nexport function TPage() {\n  var _useParams = useParams(),\n      t_id = _useParams.t_id;\n\n  var data = getDataFromServer('/t');\n  data = data.slice(1); //slice(1) because we dont need the message for how many return results     \n\n  var layout = [{\n    i: \"a\",\n    x: 150,\n    y: 0,\n    w: 1,\n    h: 2,\n    static: true\n  }, {\n    i: \"b\",\n    x: 200,\n    y: 0,\n    w: 3,\n    h: 2,\n    minW: 2,\n    maxW: 4\n  }, {\n    i: \"c\",\n    x: 4,\n    y: 0,\n    w: 1,\n    h: 2\n  }];\n  return (\n    /*#__PURE__*/\n    // <GenericStyle>\n    // <ThemeProvider theme={theme}>\n    //     <GenericStyle>\n    //         {/* <NavigationBar /> */}\n    //         <Header\n    //             handleDrawerToggle={handleDrawerToggle}\n    //             toggleDarkMode={toggleDarkMode}\n    //             darkMode={darkMode}\n    //         />\n    //         <Sidebar handleDrawerClose={handleDrawerClose} open={open} />\n    React.createElement(AllPages, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      message: \"Summery of\",\n      name: \"t_name\",\n      pk: t_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BaseInformation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Fragment, {\n      key: \"tpage_id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, data.map(function (item) {\n      return (// <div\n        //     key=\"a\"\n        //     className=\"widget\"\n        //     data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        // >\n        add_dynamic_components(item)\n      );\n    } // </div>)\n    ))) //     </GenericStyle>\n    // </ThemeProvider>\n\n  );\n}","map":{"version":3,"names":["React","Fragment","useState","GenericStyle","NavigationBar","Title","BaseInformation","useParams","Link","getDataFromServer","getColumnsWithFilters","Sidebar","Header","GridLayout","add_dynamic_components","CssBaseline","ThemeProvider","createMuiTheme","makeStyles","AllPages","TPage","t_id","data","slice","layout","i","x","y","w","h","static","minW","maxW","map","item"],"sources":["C:/Users/GH4123/my-ui/new-ui/src/Components/Tpage.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { GenericStyle } from '../app_styles';\r\nimport { NavigationBar } from './NavigationBar';\r\nimport Title from './Title';\r\nimport BaseInformation from './BaseInformation';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getDataFromServer, getColumnsWithFilters } from \"../utils/dataFromServer\";\r\nimport Sidebar from './Sidebar';\r\nimport Header from \"./Header\";\r\nimport { GridLayout } from \"react-grid-layout\"\r\nimport \"react-grid-layout/css/styles.css\"\r\nimport \"react-resizable/css/styles.css\"\r\nimport add_dynamic_components from '../utils/makeData'\r\nimport { CssBaseline, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AllPages } from './AllPages';\r\n\r\nexport function TPage() {\r\n   \r\n    const { t_id } = useParams();\r\n    let data = getDataFromServer('/t');\r\n    data = data.slice(1)  //slice(1) because we dont need the message for how many return results     \r\n\r\n    const layout = [\r\n        { i: \"a\", x: 150, y: 0, w: 1, h: 2, static: true },\r\n        { i: \"b\", x: 200, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\r\n        { i: \"c\", x: 4, y: 0, w: 1, h: 2 }\r\n    ];\r\n    \r\n    return (\r\n        // <GenericStyle>\r\n        // <ThemeProvider theme={theme}>\r\n        //     <GenericStyle>\r\n        //         {/* <NavigationBar /> */}\r\n        //         <Header\r\n        //             handleDrawerToggle={handleDrawerToggle}\r\n        //             toggleDarkMode={toggleDarkMode}\r\n        //             darkMode={darkMode}\r\n        //         />\r\n        //         <Sidebar handleDrawerClose={handleDrawerClose} open={open} />\r\n        <AllPages>\r\n                <Title message=\"Summery of\" name=\"t_name\" pk={t_id} />\r\n                <BaseInformation />\r\n                <Fragment key=\"tpage_id\">\r\n                    {/* <GridLayout\r\n                        className=\"layout\"\r\n                        layout={layout}\r\n                        cols={12}\r\n                        rowHeight={30}\r\n                        width={1200}\r\n                        color=\"green\"\r\n                    > */}\r\n                    {data.map((item) =>\r\n                        // <div\r\n                        //     key=\"a\"\r\n                        //     className=\"widget\"\r\n                        //     data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\r\n                        // >\r\n                        add_dynamic_components(item)\r\n                        // </div>)\r\n                    )}\r\n                    {/* </GridLayout> */}\r\n                </Fragment>\r\n                </AllPages>\r\n        //     </GenericStyle>\r\n        // </ThemeProvider>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,yBAAzD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,kCAAP;AACA,OAAO,gCAAP;AACA,OAAOC,sBAAP,MAAmC,mBAAnC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,QAA2D,mBAA3D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,KAAT,GAAiB;EAAA,iBAEHb,SAAS,EAFN;EAAA,IAEZc,IAFY,cAEZA,IAFY;;EAGpB,IAAIC,IAAI,GAAGb,iBAAiB,CAAC,IAAD,CAA5B;EACAa,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAW,CAAX,CAAP,CAJoB,CAIE;;EAEtB,IAAMC,MAAM,GAAG,CACX;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE,GAAb;IAAkBC,CAAC,EAAE,CAArB;IAAwBC,CAAC,EAAE,CAA3B;IAA8BC,CAAC,EAAE,CAAjC;IAAoCC,MAAM,EAAE;EAA5C,CADW,EAEX;IAAEL,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE,GAAb;IAAkBC,CAAC,EAAE,CAArB;IAAwBC,CAAC,EAAE,CAA3B;IAA8BC,CAAC,EAAE,CAAjC;IAAoCE,IAAI,EAAE,CAA1C;IAA6CC,IAAI,EAAE;EAAnD,CAFW,EAGX;IAAEP,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE,CAAb;IAAgBC,CAAC,EAAE,CAAnB;IAAsBC,CAAC,EAAE,CAAzB;IAA4BC,CAAC,EAAE;EAA/B,CAHW,CAAf;EAMA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oBAAC,QAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACQ,oBAAC,KAAD;MAAO,OAAO,EAAC,YAAf;MAA4B,IAAI,EAAC,QAAjC;MAA0C,EAAE,EAAER,IAA9C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADR,eAEQ,oBAAC,eAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR,eAGQ,oBAAC,QAAD;MAAU,GAAG,EAAC,UAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GASKC,IAAI,CAACW,GAAL,CAAS,UAACC,IAAD;MAAA,OACN;QACA;QACA;QACA;QACA;QACApB,sBAAsB,CAACoB,IAAD;MANhB;IAAA,CAAT,CAOG;IAPH,CATL,CAHR,CAXJ,CAmCI;IACA;;EApCJ;AAsCH"},"metadata":{},"sourceType":"module"}